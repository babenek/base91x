name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  test:

    runs-on: ubuntu-latest

    steps:

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    # c++

    - name: CMake
      run: cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_CXX_FLAGS=" -O " .

    - name: Make
      run: make all

    - name: C++ Unit Tests
      run: make test

    - name: C++ Performance Tests
      run: ./perf_base91

    # python:

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install pytest
      run: pip install pytest pytest-random-order pytest-repeat

    - name: Python Unit Tests
      run: pytest --count=100 --random-order-bucket=global

    # cross tests

    - name: Make random bytes
      run: dd if=/dev/urandom of=orig.dat bs=1 count=$RANDOM

    - name: Encode with python
      run: python base91.py -e orig.dat py.txt

    - name: Encode with cpp
      run: ./base91 -e orig.dat cpp.txt

    - name: Compare text
      run: diff py.txt cpp.txt

    - name: Decode with cpp
      run: ./base91 -d py.txt cpp.dat

    - name: Decode with python
      run: python base91.py -d cpp.txt py.dat

    - name: Compare refurbish data
      run: |
        HASH_ORIG=$(sha256sum orig.dat | cut -c -64)
        echo "HASH_ORIG='${HASH_ORIG}'"
        HASH_CPP=$(sha256sum cpp.dat | cut -c -64)
        echo "HASH_CPP='${HASH_CPP}'"
        HASH_PY=$(sha256sum py.dat | cut -c -64)
        echo "HASH_PY='${HASH_PY}'"
        if [ -n "${HASH_ORIG}" ] && [ "${HASH_ORIG}" == "${HASH_CPP}" ] && [ "${HASH_ORIG}" == "${HASH_PY}" ]; then
          echo "OK"
        else
          echo "FAIL"
          exit 1
        fi

    - name: Trash decoding with python
      run: python base91.py -d orig.dat trash_py.dat
      
    - name: Trash decoding with cpp
      run: ./base91 -d orig.dat trash_cpp.dat

    - name: Compare trash data
      run: |
        TRASH_HASH_CPP=$(sha256sum trash_cpp.dat | cut -c -64)
        echo "TRASH_HASH_CPP='${TRASH_HASH_CPP}'"
        TRASH_HASH_PY=$(sha256sum trash_py.dat | cut -c -64)
        echo "TRASH_HASH_PY='${TRASH_HASH_PY}'"
        if [ -n "${TRASH_HASH_CPP}" ] && [ "${TRASH_HASH_CPP}" == "${TRASH_HASH_PY}" ]; then
          echo "OK"
        else
          echo "FAIL"
          exit 1
        fi

    - name: Failure data upload
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: crash_data
        path: ./*.dat

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

